[ -z "$BASH_VERSION" ] && echo "Usage: run `basename $0` from a bash shell" && return

installed=

# bash
_bash() {
  installed=
  echo -n "checking bash..." >&2

  [[ -e $HOME/.bashrc || -L $HOME/.bashrc ]] && {
    echo "found, not installing" >&2
  } || {
    installed="bash"
    ln -s $PWD/shells/bash/bashrc.bash $HOME/.bashrc
  }

  # install .bash if not present else do nothing
  [[ -d $HOME/.bash || -L $HOME/.bash ]] && { :
  } || {
    installed="bash"
    ln -s $PWD/shells/bash $HOME/.bash
  }

  [[ -e $HOME/.bash_profile || -L $HOME/.bash_profile ]] && { :
  } || {
    installed="bash"
    ln -s $PWD/shells/bash/bash_profile $HOME/.bash_profile
  }

  [[ -e $HOME/.bash_logout || -L $HOME/.bash_logout ]] && { :
  } || {
    installed="bash"
    ln -s $PWD/shells/bash/bash_logout $HOME/.bash_logout
  }

  [ ! -z "$installed" ] && {
    echo "INSTALLED!" >&2
    echo "Don't forget to install local.bash and secrets.bash" >&2
  }
}

# git
_git() {
  installed=
  echo -n "checking git..." >&2

  [[ -e $HOME/.gitconfig || -L $HOME/.gitconfig ]] && {
    echo "found .gitconfig, not installing" >&2
  } || {
    installed="git"
    ln -s $PWD/tracker/gitrc.gitconfig $HOME/.gitconfig
  }

  [[ -d $HOME/.git || -L $HOME/.git ]] && { :
  } || {
    installed="git"
    ln -s $PWD/tracker/git $HOME/.git
  }

  [[ -e $HOME/.gitignore || -L $HOME/.gitignore ]] && { :
  } || {
    installed="git"
    ln -s $PWD/tracker/git/ignore.conf $HOME/.gitignore
  }

  [ ! -z "$installed" ] && {
    echo "INSTALLED!" >&2
    echo "Don't forget to install local.gitconfig and ignore.conf" >&2
  }
}

# misc
_misc() {
  echo "checking misc dotfiles..." >&2

  if [[ -e $HOME/.tmux.conf || -L $HOME/.tmux.conf ]]; then
    echo " - found tmux.conf, not installing" >&2
  else
    ln -s $PWD/misc/tmux.conf $HOME/.tmux.conf &&
    echo " - ...INSTALLED tmux.conf" >&2
  fi

  if [[ -e $HOME/.gemrc || -L $HOME/.gemrc ]]; then
    echo " - found gemrc, not installing" >&2
  else
    ln -s $PWD/misc/ruby/gemrc $HOME/.gemrc &&
    echo " - ...INSTALLED gemrc" >&2
  fi
  if [[ -e $HOME/.pryrc || -L $HOME/.pryrc ]]; then
    echo " - found pryrc, not installing" >&2
  else
    ln -s $PWD/misc/ruby/pryrc $HOME/.pryrc &&
    echo " - ...INSTALLED pryrc" >&2
  fi

  if [[ -e $HOME/.inputrc || -L $HOME/.inputrc ]]; then
    echo " - found inputrc, not installing" >&2
  else
    ln -s $PWD/misc/inputrc $HOME/.inputrc &&
    echo " - ...INSTALLED inputrc" >&2
  fi

  if [[ -d $HOME/.tmuxinator || -L $HOME/.tmuxinator ]]; then
    echo " - found .tmuxinator, not installing" >&2
  else
    ln -s $PWD/misc/tmuxinator $HOME/.tmuxinator &&
    echo " - .../INSTALLED .tmuxinator" >&2
  fi
}

# pal
_pal() {
  installed=
  echo -n "checking pal..." >&2

  [[ -d $HOME/.pal || -L $HOME/.pal ]] && {
    echo "found, not installing" >&2
  } || {
    installed="pal"
    ln -s $PWD/misc/pal $HOME/.pal
  }

  [ ! -z "$installed" ] && echo "INSTALLED!" >&2
}

# vim
_vim() {
  installed=
  echo -n "checking vim..." >&2

  [[ -e $HOME/.vimrc || -L $HOME/.vimrc ]] && {
    echo "found, not installing" >&2
  } || {
    installed="vim"
    ln -s $PWD/editors/vim/vimrc.vim $HOME/.vimrc
  }

  [[ -d $HOME/.vim || -L $HOME/.vim ]] && { :
  } || {
    installed="vim"
    ln -s $PWD/editors/vim $HOME/.vim
  }

  [ ! -z "$installed" ] && echo "INSTALLED!" >&2
}

_bash
_git
_misc
_pal
_vim

# vim: nonu:nowrap:nospell:ft=sh
